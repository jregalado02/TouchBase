@page "/add"
@page "/add/{id:int}"
@using TouchBase.Model;
@inject IProjectService ProjectService
@inject NavigationManager UriHelper

@if (collectionModel is not null)
{
        <h3>@collectionModel.CompanyName</h3>

    <div>
        <form class="mt-10">
            <div class="form-group row mt-xl-5">
                <label class="col-sm-2 col-form-label">Project Name:</label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" @bind="modelToAdd.Name" placeholder="">
                </div>
            </div>
            <div class="form-group mt-3">
                <label class="col-sm-2 col-form-label">Status:</label>

                            
              <div class="d-inline">                
                <input class="form-check-input mt-2" type="checkbox"  @bind="modelToAdd.IsDone"> 
                <label class="form-check-label">Finished </label>
             </div>
                            
            </div>
            <div class="form-group row mt-4">
                <label class="col-sm-2 col-for-label">Description:</label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" @bind="modelToAdd.Description" placeholder="">
                </div>
            </div>
            <div class="form-group row mt-3">
                <label class="col-sm-2 col-for-label">Approximation:</label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" @bind="modelToAdd.Approximation" placeholder="">
                </div>
            </div>
        </form>
        <button class="btn btn-success mt-4" @onclick="() => AddProject(modelToAdd)">Save Project</button>
    </div>
}

@code {
    private ProjectCollectionModel collectionModel;
    private ProjectModel modelToAdd = new ProjectModel();

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        collectionModel = await ProjectService.GetProjectCollectionModelFromId(Id);

    }

    private async Task AddProject(ProjectModel project)
    {
        project.ProjectCollectionModelId = collectionModel.ProjectCollectionModelId;
        await ProjectService.CreateModel(project);

        UriHelper.NavigateTo("/admin");
    }



}
